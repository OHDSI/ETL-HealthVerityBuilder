
/*CREATE OBSERVATION_PERIOD*/
/*********************************************************************************************/

IF OBJECT_ID('@cdm_schema.OBSERVATION_PERIOD') IS NOT NULL DROP TABLE @cdm_schema.[OBSERVATION_PERIOD]
CREATE TABLE @cdm_schema.[OBSERVATION_PERIOD] (
  OBSERVATION_PERIOD_ID INTEGER,
  PERSON_ID INTEGER,
  OBSERVATION_PERIOD_START_DATE DATE,
  OBSERVATION_PERIOD_END_DATE DATE,
  PERIOD_TYPE_CONCEPT_ID INTEGER
)
WITH (
	CLUSTERED COLUMNSTORE INDEX,
	DISTRIBUTION = HASH(OBSERVATION_PERIOD_ID)
)
;

/*CREATE PAYER_PLAN_PERIOD*/
/*********************************************************************************************/

IF OBJECT_ID('@cdm_schema.PAYER_PLAN_PERIOD') IS NOT NULL DROP TABLE @cdm_schema.[PAYER_PLAN_PERIOD]
CREATE TABLE @cdm_schema.[PAYER_PLAN_PERIOD](
  PAYER_PLAN_PERIOD_ID INTEGER,
  PERSON_ID INTEGER,
  PAYER_PLAN_PERIOD_START_DATE DATE,
  PAYER_PLAN_PERIOD_END_DATE DATE,
  PAYER_SOURCE_VALUE VARCHAR(50),
  PLAN_SOURCE_VALUE VARCHAR(50),
  FAMILY_SOURCE_VALUE VARCHAR(50)
)
WITH (
	CLUSTERED COLUMNSTORE INDEX,
	DISTRIBUTION = HASH(PAYER_PLAN_PERIOD_ID)
)
;

/*CREATE FINAL_VISIT_IDS*/
/*********************************************************************************************/
IF OBJECT_ID('@cdm_schema.FINAL_VISIT_IDS', 'U') IS NOT NULL DROP TABLE @cdm_schema.[FINAL_VISIT_IDS]
CREATE TABLE @cdm_schema.[FINAL_VISIT_IDS] (
  STEM_ID VARCHAR(MAX),
  VISIT_OCCURRENCE_ID_NEW INTEGER
)
WITH (
	CLUSTERED COLUMNSTORE INDEX,
	DISTRIBUTION = HASH(STEM_ID)
)

/*CREATE VISIT_OCCURRENCE*/
/*********************************************************************************************/

IF OBJECT_ID('@cdm_schema.VISIT_OCCURRENCE') IS NOT NULL DROP TABLE @cdm_schema.[VISIT_OCCURRENCE]
CREATE TABLE @cdm_schema.[VISIT_OCCURRENCE](
  VISIT_OCCURRENCE_ID INTEGER,
  PERSON_ID INTEGER,
  VISIT_CONCEPT_ID INTEGER,
  VISIT_START_DATE DATE,
  VISIT_END_DATE DATE,
  VISIT_TYPE_CONCEPT_ID INTEGER,
  PROVIDER_ID INTEGER,
  CARE_SITE_ID INTEGER,
  VISIT_SOURCE_VALUE VARCHAR(50),
  VISIT_SOURCE_CONCEPT_ID INTEGER
)
WITH (
	CLUSTERED COLUMNSTORE INDEX,
	DISTRIBUTION = HASH(VISIT_OCCURRENCE_ID)
)
;

/*CREATE STEM*/
/*********************************************************************************************/

IF OBJECT_ID('@cdm_schema.STEM') IS NOT NULL DROP TABLE @cdm_schema.[STEM]
CREATE TABLE @cdm_schema.[STEM](
  DOMAIN_ID VARCHAR(20),
  PERSON_ID INTEGER,
  VISIT_OCCURRENCE_ID INTEGER,
  PROVIDER_ID INTEGER,
  ID VARCHAR(200),
  CONCEPT_ID INTEGER,
  SOURCE_VALUE VARCHAR(50),
  SOURCE_CONCEPT_ID INTEGER,
  TYPE_CONCEPT_ID INTEGER,
  START_DATE DATE,
  END_DATE DATE,
  START_TIME TIME(7),
  DAYS_SUPPLY INTEGER,
  DOSE_UNIT_CONCEPT_ID INTEGER,
  DOSE_UNIT_SOURCE_VALUE VARCHAR(50),
	EFFECTIVE_DRUG_DOSE VARCHAR(50),
	LOT_NUMBER VARCHAR(50),
	MODIFIER_SOURCE_VALUE VARCHAR(50),
	OPERATOR_CONCEPT_ID INTEGER,
	QUALIFIER_CONCEPT_ID INTEGER,
	QUALIFIER_SOURCE_VALUE VARCHAR(50),
	QUANTITY FLOAT,
	RANGE_HIGH FLOAT,
	RANGE_LOW FLOAT,
	REFILLS INTEGER,
	ROUTE_CONCEPT_ID INTEGER,
	ROUTE_SOURCE_VALUE VARCHAR(50),
	SIG VARCHAR(MAX),
	STOP_REASON VARCHAR(20),
	UNIQUE_DEVICE_ID VARCHAR(50),
	UNIT_CONCEPT_ID INTEGER,
	UNIT_SOURCE_VALUE VARCHAR(50),
	VALUE_AS_CONCEPT_ID INTEGER,
	VALUE_AS_NUMBER FLOAT,
	VALUE_AS_STRING VARCHAR(50),
	VALUE_SOURCE_VALUE VARCHAR(50),
	ANATOMIC_SITE_CONCEPT_ID INTEGER,
	DISEASE_STATUS_CONCEPT_ID INTEGER,
	SPECIMEN_SOURCE_ID VARCHAR(50),
	ANATOMIC_SITE_SOURCE_VALUE VARCHAR(50),
	DISEASE_STATUS_SOURCE_VALUE VARCHAR(50),
	MODIFIER_CONCEPT_ID INTEGER
)
WITH (
	CLUSTERED COLUMNSTORE INDEX,
	DISTRIBUTION = HASH(ID)
)
;



